import os
import threading
from flask import Flask

# --- –ú–∏–Ω–∏-–≤–µ–± –¥–ª—è keep-alive –Ω–∞ Render ---
app = Flask(__name__)

@app.get("/")
def root():
    return "ok", 200

def run_web():
    # Render –æ–±—ã—á–Ω–æ –ø—Ä–æ–∫–∏–¥—ã–≤–∞–µ—Ç PORT, –Ω–æ –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π 8080 –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    port = int(os.environ.get("PORT", "8080"))
    # host=0.0.0.0 –æ–±—è–∑–∞—Ç–µ–ª—å–µ–Ω –¥–ª—è –≤–Ω–µ—à–Ω–µ–≥–æ –¥–æ—Å—Ç—É–ø–∞
    app.run(host="0.0.0.0", port=port, debug=False)

import os, threading, time, requests, pandas as pd, numpy as np, schedule
from io import BytesIO
from flask import Flask
from telegram.ext import Updater, CommandHandler, CallbackContext
from telegram import Update, BotCommand

# --- Secrets –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è ---
TELEGRAM_TOKEN = os.environ.get("TELEGRAM_TOKEN")
CHAT_ID = int(os.environ.get("CHAT_ID", "0"))

# --- –ú–æ–Ω–µ—Ç—ã ---
PAIRS = ["BTCUSDT","ETHUSDT","BNBUSDT","SOLUSDT","XRPUSDT","DOGEUSDT","LTCUSDT","SUIUSDT"]

# --- Keep-alive HTTP, —á—Ç–æ–±—ã Render –≤–∏–¥–µ–ª —Å–µ—Ä–≤–∏—Å –∂–∏–≤—ã–º ---
app = Flask(__name__)
@app.get("/") 
def root(): return "ok", 200
def run_web(): app.run(host="0.0.0.0", port=8080)

# --- –ü—Ä–æ—Å—Ç–µ–π—à–∏–µ —Ö–µ–ª–ø–µ—Ä—ã (–æ—Å—Ç–∞–≤–∏–º —Ç–æ–ª—å–∫–æ –Ω—É–∂–Ω–æ–µ –¥–ª—è —Å—Ç–∞—Ä—Ç–∞) ---
def send_text(msg:str):
    try:
        requests.post(f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/sendMessage",
                      data={"chat_id": CHAT_ID, "text": msg, "parse_mode":"Markdown"}, timeout=20)
    except: pass

def get_ticker(symbol):
    return requests.get(f"https://api.binance.com/api/v3/ticker/24hr?symbol={symbol}", timeout=20).json()

def cmd_start(update: Update, context: CallbackContext):
    update.message.reply_text("‚úÖ –ë–æ—Ç –Ω–∞ Render —Ä–∞–±–æ—Ç–∞–µ—Ç. –ö–æ–º–∞–Ω–¥–∞ /report –æ—Ç–ø—Ä–∞–≤–∏—Ç –æ–±–∑–æ—Ä.")

def cmd_report(update: Update, context: CallbackContext):
    msg = "üìä *–û—Ç—á—ë—Ç –ø–æ –º–æ–Ω–µ—Ç–∞–º:*\n\n"
    for p in PAIRS:
        d = get_ticker(p)
        price = float(d.get("lastPrice",0) or 0)
        ch = float(d.get("priceChangePercent",0) or 0)
        sign = "üìà" if ch>=0 else "üìâ"
        msg += f"*{p}*: {price:.4f} USDT ({sign} {ch:.2f}%)\n"
    update.message.reply_text(msg, parse_mode="Markdown")

def start_bot():
    up = Updater(TELEGRAM_TOKEN, use_context=True)
    dp = up.dispatcher
    dp.add_handler(CommandHandler("start", cmd_start))
    dp.add_handler(CommandHandler("report", cmd_report))
    up.bot.set_my_commands([
        BotCommand("start","–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥"),
        BotCommand("report","–û—Ç—á—ë—Ç –ø–æ –º–æ–Ω–µ—Ç–∞–º"),
    ])
    up.start_polling()
    send_text("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –Ω–∞ Render.")

if __name__ == "__main__":
    threading.Thread(target=run_web, daemon=True).start()   # keep-alive –≤–µ–±
    start_bot()                                             # Telegram polling
    while True: time.sleep(60)                              # –Ω–µ –≤—ã—Ö–æ–¥–∏–º

